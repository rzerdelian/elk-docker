
metricbeat.config.modules:

  # Glob pattern for configuration reloading
  path: ${path.config}/metricbeat.d/*.yml

  # Period on which files under path should be checked for chagnes
  reload.period: 10s

  # Set to true to enable config reloading
  reload.enabled: true

setup.template.settings:
  index.number_of_shards: 1
  index.codec: best_compression
  
#==========================  Modules configuration ============================
metricbeat.modules:

#------------------------------- System Module -------------------------------
- module: system
  metricsets:
    # CPU stats
    - cpu

    # System Load stats
    - load

    # Per CPU core stats
    #- core

    # IO stats
    #- diskio

    # Per filesystem stats
    - filesystem

    # File system summary stats
    - fsstat

    # Memory stats
    - memory

    # Network stats
    - network

    # Per process stats
    - process

    # Sockets and connection info (linux only)
    #- socket
  enabled: true
  period: 10s
  processes: ['.*']
  #cgroups: true

  # if true, exports the CPU usage in ticks, together with the percentage values
  #cpu_ticks: false

  # Enable collection of cgroup metrics from processes on Linux.
  #process.cgroups.enabled: true

  # A list of regular expressions used to whitelist environment variables
  # reported with the process metricset's events. Defaults to empty.
  #process.env.whitelist: []

  # Configure reverse DNS lookup on remote IP addresses in the socket metricset.
  #socket.reverse_lookup.enabled: false
  #socket.reverse_lookup.success_ttl: 60s
  #socket.reverse_lookup.failure_ttl: 60s

#------------------------------- Docker Module -------------------------------
- module: docker
  metricsets: ["container", "cpu", "diskio", "healthcheck", "info", "memory", "network"]
  hosts: ["unix:///var/run/docker.sock", "npipe:////./pipe/docker_engine"]
  enabled: true
  period: 10s

  # To connect to Docker over TLS you must specify a client and CA certificate.
  #ssl:
    #certificate_authority: "/etc/pki/root/ca.pem"
    #certificate:           "/etc/pki/client/cert.pem"
    #key:                   "/etc/pki/client/cert.key"

- module: elasticsearch
  metricsets: ["node", "node_stats"]
  period: 10s
  hosts: ["elaticsearch:9200"]

- module: logstash
  metricsets: ["node", "node_stats"]
  enabled: false
  period: 10s
  hosts: ["logstash:9600"]
#-------------------------- Elasticsearch output -------------------------------
xpack.monitoring.enabled: true
xpack.monitoring.elasticsearch:
  hosts: ["http://elasticsearch:9200"]
  
output.elasticsearch:
  # Boolean flag to enable or disable the output module.
  #enabled: true
  hosts:  ["http://elasticsearch:9200"]
  # Set gzip compression level.
  #compression_level: 0

#----------------------------- Logstash output ---------------------------------
#output.logstash:
  # Boolean flag to enable or disable the output module.
  #enabled: true

  # The Logstash hosts
  #hosts: ["http://logstash:5044"]

  # Number of workers per Logstash host.
  #worker: 1

  # Set gzip compression level.
  #compression_level: 3

  # Optional load balance the events between the Logstash hosts
  #loadbalance: true

  # Number of batches to be send asynchronously to logstash while processing
  # new batches.
  #pipelining: 0

setup.dashboards.enabled: true
setup.kibana:
  host: "kibana:5601"
